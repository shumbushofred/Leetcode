class Solution {
public:
      vector<string> prfx;
    int calculate(string s) {
        int strsize = s.size();
     stack<int> stk;
        double fulnum = 0;
        double sum = 0;
        int sign =1;
     for(int i = 0; i < strsize;i++)
     {
        char elem = s[i];
       
         if(isdigit(elem))
         {
             fulnum =0;
             fulnum = fulnum *10 + elem - '0';
            
             i++;
              char telem = s[i];
            while(i < strsize && isdigit(s[i]))
            {
             // telem = s[i];
                 fulnum = fulnum *10 + s[i] - '0';
              //  cout<<"fulnum ="<<fulnum<<endl;
                     i++;        
              } 
            // cout<<"fulnum ="<<fulnum<<endl;
            // cout<<"sum 1 ="<< sum<<endl;
             sum += fulnum* sign;
            // cout<<"sum 2 ="<< sum<<endl;
             i--;
          }
         
         else if (elem == '+')
         {
             sign = 1;
         }
         else if(elem == '-')
         {
             sign = -1;
         }
         else if(elem == '(')
         {
             stk.push(sum);
             stk.push(sign);
             sum = 0;
             sign = 1;
         }
         else if(elem == ')')
         {
             int temp = stk.top();
             sum = temp * sum;
             stk.pop();
             temp = stk.top();
             sum += temp;
             stk.pop();
         }
    }
        
     return sum;   
        
        
        
        
    
   
                 
    }
};